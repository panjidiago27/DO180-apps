#!/usr/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-openshift-webconsole - DO180 Creating an Application with the Web Console
#
# SYNOPSIS
#     lab-openshift-webconsole {start|finish}
#
#        start  - configures the environment at the start of a lab or exercise.
#        finish - executes any administrative tasks after completion of a lab or exercise.
#
#     All functions only work on workstation
#
# DESCRIPTION
#     This script configures the initial state of the lab with lab and solution files.
#
# CHANGELOG
#   * Tue Feb 12 2019 Dan Kolepp <dkolepp@redhat.com>
#   - updated to v.4.0
#   - changed script verbs from (setup|cleanup), to (start|finish)
#   * Mon Jun 18 2018 Artur Glogowski <aglogows@redhat.com>
#   - updated to v.3.9
#   * Sun Apr 09 2017 Jim Rigsbee <jrigsbee@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Initialize and set some variables
run_as_root='true'
this='openshift-webconsole'
target='workstation'
title='Guided Exercise: Creating an Application with the Web Console'

# This defines which subcommands are supported (solve, reset, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start finish)



# Additional functions for this grading script

function print_usage {
  local problem_name=$(basename $0 | sed -e 's/^lab-//')
  cat << EOF
This script controls the start and finish of this exercise.
Usage: lab ${problem_name} COMMAND
       lab ${problem_name} -h|--help

COMMAND is one of: ${valid_commands[@]}

EOF
}

function lab_start {
  print_header "Setting up ${target} for the ${title}"

  ocp4_is_cluster_up

  pad " · Ensuring the '${RHT_OCP4_DEV_USER}-console' project does not exist"
  delete_project "${RHT_OCP4_DEV_USER}-console"
  if [ $? -eq 0 ]; then
    print_SUCCESS
  else
    print_FAIL
  fi

  #Creates more readable output
  print_line

}


function lab_finish {
  print_header "Completing the ${title}"

  pad " · Ensure the '${RHT_OCP4_DEV_USER}-console' project is deleted "
  delete_project "${RHT_OCP4_DEV_USER}-console"
  if [ $? -eq 0 ]; then
    print_SUCCESS
  else
    print_FAIL
  fi

  print_line
}


function find_consoler_port {
  local stmt=$(oc set env dc/router --list -n default | grep HTTP_PORT)
  IFS='=' read -ra ROUTER <<< "$stmt"
  echo "${ROUTER[1]}"
}

function find_console_fqdn {
  local stmt=$(oc describe route php-helloworld -n console | grep Host)
  IFS=':' read -ra FQDN <<< "$stmt"
  echo "${FQDN[1]}" | tr -d [:space:]
}
############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/labtool.shlib
source /usr/local/lib/labtool.do180.shlib

grading_main_program "$@"
