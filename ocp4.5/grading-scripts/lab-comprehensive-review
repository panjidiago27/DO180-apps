#!/usr/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-comprehensive-review - DO180 Comprehensive Review Lab
#
# SYNOPSIS
#     lab-comprehensive-review {start|grade|finish}
#
#        start   - configures the environment at the start of a lab or exercise.
#        grade   - checks that containers and images have been created successfully.
#        finish  - executes any administrative tasks after completion of a lab or exercise.
#
#     All functions only work on workstation
#
# DESCRIPTION
#     This script configures the initial state of the lab with lab and solution files.
#
# CHANGELOG
#   * Fri Nov 06 2020 Michael Phillips <miphilli@redhat.com>
#   - fixed broken grading function: it always gave a grade of PASS
#   * Mon Oct 14 2019 Jordi Sola <jordisola@redhat.com>
#   - Moved to the shared cluster and quay.io
#   * Wed Jun 13 2019 Michael Jarrett <mjarrett@redhat.com>
#   - Updated Initialize and set some variables
#   * Mon Mar 04 2019 Jordi Sola <jordisola@redhat.com>
#   - Updated to Podman and OCP4
#   * Wed Apr 05 2017 Jim Rigsbee <jrigsbee@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
this='comprehensive-review'
target='workstation'
title='Lab: Comprehensive Review Lab'

# This defines which subcommands are supported (solve, reset, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start grade finish)

# Additional functions for this grading script

function print_usage {
  local problem_name=$(basename $0 | sed -e 's/^lab-//')
  cat << EOF
This script controls the setup and grading of this lab.
Usage: lab ${problem_name} COMMAND
       lab ${problem_name} -h|--help

COMMAND is one of: ${valid_commands[@]}

EOF
}

function lab_start {
  print_header "Setting up ${target} for the ${title}"

  check_podman_registry_config

  grab_lab_files "true"

}

function lab_grade {
  print_header "Grading the student's work for the ${title}"

  #TODO: Refactor this function; make more robust
  local route=nexus-${RHT_OCP4_DEV_USER}-review.${RHT_OCP4_WILDCARD_DOMAIN}
  pad " · Accessing Nexus web application"
  if curl -f -s --connect-timeout 1 "$route/nexus/" | grep "Loading Nexus UI"
  then
    print_PASS
  else
    print_FAIL
    print_line "   --> Nexus does not appear to be running at: $route/nexus/ "
  fi
}

function lab_finish {
  print_header "Cleaning up the lab for ${title}"

  pad " · Deleting OpenShift project ${RHT_OCP4_DEV_USER}-review" && delete_project ${RHT_OCP4_DEV_USER}-review
  if [ $? -eq 0 ]; then
    print_SUCCESS
  else
    print_FAIL
  fi

}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/labtool.shlib
source /usr/local/lib/labtool.do180.shlib

grading_main_program "$@"
